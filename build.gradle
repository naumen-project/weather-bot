plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.example'
version = '1.0.8'

sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.telegram:telegrambots:6.5.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'
    testImplementation 'junit:junit:4.13.1'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'org.junit.vintage:junit-vintage-engine'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.mockito:mockito-junit-jupiter:2.23.0'
    testImplementation 'org.mockito:mockito-core:2.21.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

jar {
    enabled = false
}

task printVersionName {
    println project.version
}

task buildDocker(type: Exec) {
    dependsOn build
    workingDir "$projectDir"
    commandLine 'docker', 'build', '--rm', '.',
            '-t', "nobodyknowsdotcom/weatherfy:${project.version}",
            '-t', 'nobodyknowsdotcom/weatherfy:latest',
            '-f', "$projectDir/src/main/docker/Dockerfile"
}

task pushDocker(type: Exec) {
    workingDir "$projectDir"
    commandLine 'docker', 'push', "nobodyknowsdotcom/weatherfy:${project.version}"
    commandLine 'docker', 'push', 'nobodyknowsdotcom/weatherfy', '-a'
}

